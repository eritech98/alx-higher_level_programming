The 2-matrix_divided module test
=================================

Using the matrix_divided function
----------------------------------

First import the function from the module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]
	>>> try:
	...     print(matrix_divided(matrix, 0))
	... except Exception as e:
	...     print(e)
	... 
	division by zero
	>>> 
	>>> matrix1 = [[1, 2, 3, 4], [4, 5, 6]]
	>>> try:
	...     print(matrix_divided(matrix1, 2))
	... except Exception as e:
	...     print(e)
	... 
	Each row of the matrix must have the same size
	>>> try:
	...     print(matrix_divided(matrix, "hey"))
	... except Exception as e:
	...     print(e)
	... 
	div must be a number
	>>> matrix2 = [[1, 2, "l"], [2, 4, 6]]
	>>> try:
	...     print(matrix_divided(matrix2, 2))
	... except Exception as e:
	...     print(e)
	... 
	matrix must be a matrix (list of lists) of integers/floats
	>>> matrix3 = "hey"
	>>> try:
	...     print(matrix_divided(matrix3, 2))
	... except Exception as e:
	...     print(e)
	... 
	matrix must be a matrix (list of lists) of integers/floats
	>>> matrix4 = []
	>>> try:
	...     print(matrix_divided(matrix4, 2))
	... except Exception as e:
	...     print(e)
	... 
	matrix must be a matrix (list of lists) of integers/floats
	>>> matrix5 = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix5, -2))
	[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
	>>> 
